// Package controller provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen/v2 version v2.1.1-0.20240331212514-80f0b978ef16 DO NOT EDIT.
package controller

// Defines values for MenuStatus.
const (
	MenuStatusDisabled MenuStatus = "disabled"
	MenuStatusEnabled  MenuStatus = "enabled"
)

// Defines values for MenuType.
const (
	Button MenuType = "button"
	Page   MenuType = "page"
)

// Defines values for RoleStatus.
const (
	RoleStatusDisabled RoleStatus = "disabled"
	RoleStatusEnabled  RoleStatus = "enabled"
)

// Defines values for UserStatus.
const (
	Activated UserStatus = "activated"
	Frozen    UserStatus = "frozen"
)

// Error defines model for Error.
type Error struct {
	Code    int32  `json:"code"`
	Message string `json:"message"`
}

// Menu defines model for Menu.
type Menu struct {
	Code        string     `json:"code" validate:"max=64"`
	Created     string     `json:"created"`
	Description string     `json:"description" validate:"max=1024"`
	Id          *int32     `json:"id,omitempty"`
	Name        string     `json:"name" validate:"max=64"`
	ParentId    int32      `json:"parent_id" validate:"min=1"`
	ParentPath  string     `json:"parent_path" validate:"max=1024"`
	Path        string     `json:"path" validate:"max=1024"`
	Property    string     `json:"property" validate:"max=64"`
	Resource    []Resource `json:"resource"`
	Sequence    int16      `json:"sequence" validate:"min=1"`
	Status      MenuStatus `json:"status" validate:"oneof=enabled disabled"`
	Type        MenuType   `json:"type" validate:"oneof=page button"`
	Updated     string     `json:"updated"`
}

// MenuStatus defines model for Menu.Status.
type MenuStatus string

// MenuType defines model for Menu.Type.
type MenuType string

// Resource defines model for Resource.
type Resource struct {
	Created string `json:"created"`
	Id      *int32 `json:"id,omitempty"`
	MenuId  int32  `json:"menu_id"`
	Method  string `json:"method" validate:"max=64"`
	Path    string `json:"path" validate:"max=1024"`
	Updated string `json:"updated"`
}

// Role defines model for Role.
type Role struct {
	Code        string     `json:"code" validate:"max=64"`
	Created     string     `json:"created"`
	Description string     `json:"description" validate:"max=1024"`
	Id          *int32     `json:"id,omitempty"`
	Menu        []RoleMenu `json:"menu"`
	Name        string     `json:"name" validate:"max=64"`
	Sequence    int16      `json:"sequence" validate:"min=1"`
	Status      RoleStatus `json:"status" validate:"oneof=enabled disabled"`
	Updated     string     `json:"updated"`
}

// RoleStatus defines model for Role.Status.
type RoleStatus string

// RoleMenu defines model for RoleMenu.
type RoleMenu struct {
	Created string `json:"created"`
	Id      *int32 `json:"id,omitempty"`
	MenuId  int32  `json:"menu_id" validate:"min=1"`
	RoleId  *int32 `json:"role_id,omitempty"`
	Updated string `json:"updated"`
}

// User defines model for User.
type User struct {
	Created  string     `json:"created"`
	Email    string     `json:"email" validate:"email"`
	Id       *int32     `json:"id,omitempty"`
	Name     string     `json:"name" validate:"max=64"`
	Password string     `json:"password" validate:"max=64"`
	Phone    string     `json:"phone" validate:"e164"`
	Remark   string     `json:"remark" validate:"max=1024"`
	Role     []UserRole `json:"role"`
	Status   UserStatus `json:"status" validate:"oneof=activated frozen"`
	Updated  string     `json:"updated"`
	Username string     `json:"username" validate:"max=64"`
}

// UserStatus defines model for User.Status.
type UserStatus string

// UserRole defines model for UserRole.
type UserRole struct {
	Created string `json:"created"`
	Id      *int32 `json:"id,omitempty"`
	RoleId  int32  `json:"role_id" validate:"min=1"`
	Updated string `json:"updated"`
	UserId  *int32 `json:"user_id,omitempty"`
}

// GetApiV1MenusParams defines parameters for GetApiV1Menus.
type GetApiV1MenusParams struct {
	CodePath string `form:"codePath" json:"codePath"`
	Name     string `form:"name" json:"name"`
}

// GetApiV1RolesParams defines parameters for GetApiV1Roles.
type GetApiV1RolesParams struct {
	Name     string `form:"name" json:"name"`
	Status   string `form:"status" json:"status"`
	Current  int32  `form:"current" json:"current"`
	PageSize int32  `form:"pageSize" json:"pageSize"`
}

// GetApiV1UsersParams defines parameters for GetApiV1Users.
type GetApiV1UsersParams struct {
	Username string `form:"username" json:"username"`
	Name     string `form:"name" json:"name"`
	Status   string `form:"status" json:"status"`
	Current  int32  `form:"current" json:"current"`
	PageSize int32  `form:"pageSize" json:"pageSize"`
}

// PostApiV1MenusJSONRequestBody defines body for PostApiV1Menus for application/json ContentType.
type PostApiV1MenusJSONRequestBody = Menu

// PutApiV1MenusIdJSONRequestBody defines body for PutApiV1MenusId for application/json ContentType.
type PutApiV1MenusIdJSONRequestBody = Menu

// PostApiV1RolesJSONRequestBody defines body for PostApiV1Roles for application/json ContentType.
type PostApiV1RolesJSONRequestBody = Role

// PutApiV1RolesIdJSONRequestBody defines body for PutApiV1RolesId for application/json ContentType.
type PutApiV1RolesIdJSONRequestBody = Role

// PostApiV1UsersJSONRequestBody defines body for PostApiV1Users for application/json ContentType.
type PostApiV1UsersJSONRequestBody = User

// PutApiV1UsersIdJSONRequestBody defines body for PutApiV1UsersId for application/json ContentType.
type PutApiV1UsersIdJSONRequestBody = User
