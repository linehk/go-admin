openapi: "3.0.0"
info:
  version: 1.0.0
  title: go-admin
  description: go-admin
paths:
  /api/v1/users:
    get:
      parameters:
        - name: username
          in: query
          schema:
            type: string
          required: true
        - name: name
          in: query
          schema:
            type: string
          required: true
        - name: status
          in: query
          schema:
            type: string
          required: true
        - name: current
          in: query
          schema:
            type: integer
            format: int32
          required: true
        - name: pageSize
          in: query
          schema:
            type: integer
            format: int32
          required: true
      responses:
        '200':
          description: empty
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        default:
          description: empty
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: empty
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        default:
          description: empty
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v1/users/{id}:
    get:
      parameters:
        - name: id
          in: path
          schema:
            type: integer
            format: int32
          required: true
      responses:
        '200':
          description: empty
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        default:
          description: empty
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      parameters:
        - name: id
          in: path
          schema:
            type: integer
            format: int32
          required: true
      responses:
        '200':
          description: empty
        default:
          description: empty
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    
    put:
      parameters:
        - name: id
          in: path
          schema:
            type: integer
            format: int32
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: empty
        default:
          description: empty
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
                
  /api/v1/roles:
    get:
      parameters:
        - name: name
          in: query
          schema:
            type: string
          required: true
        - name: status
          in: query
          schema:
            type: string
          required: true
        - name: current
          in: query
          schema:
            type: integer
            format: int32
          required: true
        - name: pageSize
          in: query
          schema:
            type: integer
            format: int32
          required: true
      responses:
        '200':
          description: empty
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Role'
        default:
          description: empty
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
      responses:
        '200':
          description: empty
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
        default:
          description: empty
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v1/roles/{id}:
    get:
      parameters:
        - name: id
          in: path
          schema:
            type: integer
            format: int32
          required: true
      responses:
        '200':
          description: empty
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
        default:
          description: empty
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      parameters:
        - name: id
          in: path
          schema:
            type: integer
            format: int32
          required: true
      responses:
        '200':
          description: empty
        default:
          description: empty
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    put:
      parameters:
        - name: id
          in: path
          schema:
            type: integer
            format: int32
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
      responses:
        '200':
          description: empty
        default:
          description: empty
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    
    User:
      properties:
        id:
          type: integer
          format: int32
        username:
          type: string
        password:
          type: string
        name:
          type: string
        email:
          type: string
        phone:
          type: string
        remark:
          type: string
        status:
          type: string
          enum:
            - activated
            - frozen
        created:
          type: string
        updated:
          type: string
        role:
          items:
            $ref: '#/components/schemas/UserRole'
          type: array
      required:
        - username
        - password
        - name
        - email
        - phone
        - remark
        - status
        - created
        - updated
        - role
      type: object
      
    UserRole:
      properties:
        id:
          type: integer
          format: int32
        user_id:
          type: integer
          format: int32
        role_id:
          type: integer
          format: int32
        created:
          type: string
        updated:
          type: string
      required:
        - role_id
        - created
        - updated
      type: object
      
    Role:
      properties:
        id:
          type: integer
          format: int32
        code:
          type: string
        name:
          type: string
        description:
          type: string
        sequence:
          type: integer
          format: int16
        status:
          type: string
          enum:
            - enabled
            - disabled
        created:
          type: string
        updated:
          type: string
        menu:
          items:
            $ref: '#/components/schemas/RoleMenu'
          type: array
      required:
        - code
        - name
        - description
        - sequence
        - status
        - created
        - updated
        - menu
      type: object
      
    RoleMenu:
      properties:
        id:
          type: integer
          format: int32
        role_id:
          type: integer
          format: int32
        menu_id:
          type: integer
          format: int32
        created:
          type: string
        updated:
          type: string
      required:
        - menu_id
        - created
        - updated
      type: object
      
    Menu:
      properties:
        id:
          type: integer
          format: int32
        code:
          type: string
        name:
          type: string
        description:
          type: string
        sequence:
          type: integer
          format: int16
        type:
          type: string
        path:
          type: string
        property:
          type: string
        parent_id:
          type: integer
          format: int32
        parent_path:
          type: string
        status:
          type: string
          enum:
            - enabled
            - disabled
        created:
          type: string
        updated:
          type: string
        resource:
          items:
            $ref: '#/components/schemas/Resource'
          type: array
      required:
        - code
        - name
        - description
        - sequence
        - status
        - created
        - updated
        - menu
    
    Resource:
      properties:
        id:
          type: integer
          format: int32
        menu_id:
          type: integer
          format: int32
        method:
          type: string
        path:
          type: string
        created:
          type: string
        updated:
          type: string
      required:
        - menu_id
        - method
        - path
        - created
        - updated
      type: object